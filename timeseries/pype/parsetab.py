
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'ID':([4,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[8,11,15,20,-28,15,-26,-27,-9,32,15,15,15,32,15,15,43,-8,-13,44,-15,-17,32,15,-21,-30,15,15,-11,32,15,15,15,-18,56,-12,-14,-20,-29,-22,-24,-10,-25,-23,-19,-16,]),'$end':([1,2,5,6,9,10,18,27,],[-5,-4,0,-1,-2,-3,-6,-7,]),'LPAREN':([0,1,2,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[3,-5,-4,3,12,-2,-3,-28,12,-26,-27,-9,-6,30,12,12,12,30,12,12,-7,-8,-13,-15,-17,30,12,-21,-30,12,12,-11,30,12,12,12,-12,-14,-20,-29,-22,-24,-10,-25,-23,-19,-16,]),'OP_MUL':([12,],[22,]),'OP_SUB':([12,],[25,]),'OP_ADD':([12,],[21,]),'RBRACE':([13,14,15,16,17,28,29,35,39,46,48,50,51,52,53,54,57,],[-28,27,-26,-27,-9,-8,-13,-21,-11,-12,-20,-22,-24,-10,-25,-23,-19,]),'STRING':([8,13,14,15,16,17,20,21,22,24,25,28,29,34,35,36,37,38,39,41,42,43,46,48,49,50,51,52,53,54,57,],[13,-28,13,-26,-27,-9,13,13,13,13,13,-8,-13,13,-21,-30,13,13,-11,13,13,13,-12,-20,-29,-22,-24,-10,-25,-23,-19,]),'IMPORT':([3,],[7,]),'RPAREN':([11,13,15,16,19,20,23,29,31,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,29,35,39,-13,-15,-17,46,48,-21,-30,50,51,-11,52,53,54,-12,-14,-20,-29,-22,-24,-10,-25,-23,57,58,-19,-16,]),'NUMBER':([8,13,14,15,16,17,20,21,22,24,25,28,29,34,35,36,37,38,39,41,42,43,46,48,49,50,51,52,53,54,57,],[16,-28,16,-26,-27,-9,16,16,16,16,16,-8,-13,16,-21,-30,16,16,-11,16,16,16,-12,-20,-29,-22,-24,-10,-25,-23,-19,]),'INPUT':([12,],[23,]),'OUTPUT':([12,],[19,]),'LBRACE':([0,1,2,6,9,10,18,27,],[4,-5,-4,4,-2,-3,-6,-7,]),'ASSIGN':([12,],[26,]),'OP_DIV':([12,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([30,],[45,]),'component':([0,6,],[1,9,]),'import_statement':([0,6,],[2,10,]),'parameter_list':([20,21,22,24,25,],[34,37,38,41,42,]),'declaration':([19,23,33,40,],[31,31,47,47,]),'expression':([8,14,20,21,22,24,25,34,37,38,41,42,43,],[17,28,36,36,36,36,36,49,49,49,49,49,55,]),'declaration_list':([19,23,],[33,40,]),'program':([0,],[5,]),'statement_list':([0,],[6,]),'expression_list':([8,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
