
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'RPAREN':([11,12,15,17,22,26,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,31,40,42,45,-13,-15,-17,-30,49,51,52,53,-11,54,-21,55,56,-12,-14,-23,-29,-22,-25,-10,-24,-20,-19,58,-16,]),'STRING':([10,12,13,15,16,17,20,23,24,25,27,28,29,31,35,36,37,38,40,41,42,43,45,49,50,51,52,53,54,55,56,],[12,-28,12,-27,-9,-26,-8,12,12,12,12,12,12,-13,-30,12,12,12,-11,12,-21,12,-12,-23,-29,-22,-25,-10,-24,-20,-19,]),'LBRACE':([0,2,3,5,8,9,18,19,],[6,-5,-4,6,-2,-3,-6,-7,]),'IMPORT':([4,],[7,]),'ASSIGN':([14,],[21,]),'LPAREN':([0,2,3,5,8,9,10,12,13,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,58,],[4,-5,-4,4,-2,-3,14,-28,14,-27,-9,-26,-6,-7,-8,32,14,14,14,32,14,14,14,32,-13,-15,-17,-30,14,14,14,32,-11,14,-21,14,-12,-14,-23,-29,-22,-25,-10,-24,-20,-19,-16,]),'OUTPUT':([14,],[22,]),'OP_SUB':([14,],[23,]),'NUMBER':([10,12,13,15,16,17,20,23,24,25,27,28,29,31,35,36,37,38,40,41,42,43,45,49,50,51,52,53,54,55,56,],[15,-28,15,-27,-9,-26,-8,15,15,15,15,15,15,-13,-30,15,15,15,-11,15,-21,15,-12,-23,-29,-22,-25,-10,-24,-20,-19,]),'OP_ADD':([14,],[24,]),'OP_DIV':([14,],[25,]),'RBRACE':([12,13,15,16,17,20,31,40,42,45,49,51,52,53,54,55,56,],[-28,19,-27,-9,-26,-8,-13,-11,-21,-12,-23,-22,-25,-10,-24,-20,-19,]),'ID':([6,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[10,11,17,-28,17,28,-27,-9,-26,-8,29,34,17,17,17,34,17,17,17,34,-13,48,-15,-17,-30,17,17,17,34,-11,17,-21,17,-12,-14,57,-18,-23,-29,-22,-25,-10,-24,-20,-19,-16,]),'OP_MUL':([14,],[27,]),'$end':([1,2,3,5,8,9,18,19,],[0,-5,-4,-1,-2,-3,-6,-7,]),'INPUT':([14,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([22,26,],[30,39,]),'expression_list':([10,],[13,]),'program':([0,],[1,]),'parameter_list':([23,24,25,27,28,],[36,37,38,41,43,]),'type':([32,],[47,]),'expression':([10,13,23,24,25,27,28,29,36,37,38,41,43,],[16,20,35,35,35,35,35,44,50,50,50,50,50,]),'component':([0,5,],[2,8,]),'import_statement':([0,5,],[3,9,]),'statement_list':([0,],[5,]),'declaration':([22,26,30,39,],[33,33,46,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_add','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_subtract','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
