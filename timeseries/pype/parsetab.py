
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'LBRACE':([0,1,3,4,7,8,18,28,],[6,6,-4,-5,-2,-3,-6,-7,]),'RPAREN':([11,13,14,17,21,22,26,29,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,32,34,42,44,-30,-21,47,-11,-15,-17,50,52,53,54,-13,55,-25,-29,56,-20,-10,-14,-22,-23,-24,-12,-19,58,-16,]),'LPAREN':([0,1,3,4,7,8,10,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,47,50,51,52,53,54,55,56,58,],[2,2,-4,-5,-2,-3,12,-27,-26,12,-9,-28,-6,12,12,35,12,12,12,35,-8,-7,12,-30,12,-21,12,-11,-15,-17,35,12,12,12,-13,35,-25,-29,-20,-10,-14,-22,-23,-24,-12,-19,-16,]),'ASSIGN':([12,],[20,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[10,11,14,21,-27,-26,14,-9,-28,14,31,14,37,14,14,14,37,-8,14,-30,14,-21,14,-11,49,-15,-17,37,14,14,14,-13,37,-25,-29,-20,57,-18,-10,-14,-22,-23,-24,-12,-19,-16,]),'$end':([1,3,4,5,7,8,18,28,],[-1,-4,-5,0,-2,-3,-6,-7,]),'INPUT':([12,],[22,]),'OP_ADD':([12,],[23,]),'OP_SUB':([12,],[24,]),'IMPORT':([2,],[9,]),'OP_MUL':([12,],[25,]),'NUMBER':([10,13,14,15,16,17,19,21,23,24,25,27,29,30,31,32,33,34,39,40,41,42,44,45,47,50,52,53,54,55,56,],[13,-27,-26,13,-9,-28,13,13,13,13,13,-8,13,-30,13,-21,13,-11,13,13,13,-13,-25,-29,-20,-10,-22,-23,-24,-12,-19,]),'OP_DIV':([12,],[19,]),'RBRACE':([13,14,15,16,17,27,32,34,42,44,47,50,52,53,54,55,56,],[-27,-26,28,-9,-28,-8,-21,-11,-13,-25,-20,-10,-22,-23,-24,-12,-19,]),'OUTPUT':([12,],[26,]),'STRING':([10,13,14,15,16,17,19,21,23,24,25,27,29,30,31,32,33,34,39,40,41,42,44,45,47,50,52,53,54,55,56,],[17,-27,-26,17,-9,-28,17,17,17,17,17,-8,17,-30,17,-21,17,-11,17,17,17,-13,-25,-29,-20,-10,-22,-23,-24,-12,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'expression_list':([10,],[15,]),'import_statement':([0,1,],[3,8,]),'component':([0,1,],[4,7,]),'declaration':([22,26,38,43,],[36,36,51,51,]),'expression':([10,15,19,21,23,24,25,29,31,33,39,40,41,],[16,27,30,30,30,30,30,45,46,45,45,45,45,]),'declaration_list':([22,26,],[38,43,]),'program':([0,],[5,]),'parameter_list':([19,21,23,24,25,],[29,33,39,40,41,]),'type':([35,],[48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
