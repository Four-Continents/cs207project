
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'IMPORT':([6,],[10,]),'STRING':([7,11,12,13,15,16,18,23,24,25,26,27,29,34,36,37,38,39,40,41,42,43,44,48,50,51,52,53,54,55,57,],[16,-9,-27,16,-26,-28,-8,16,16,16,16,16,-13,-11,16,-30,16,16,16,-21,16,16,-12,-10,-29,-23,-24,-25,-20,-22,-19,]),'OP_MUL':([14,],[24,]),'ASSIGN':([14,],[22,]),'OUTPUT':([14,],[20,]),'RBRACE':([11,12,13,15,16,18,29,34,41,44,48,51,52,53,54,55,57,],[-9,-27,19,-26,-28,-8,-13,-11,-21,-12,-10,-23,-24,-25,-20,-22,-19,]),'LPAREN':([0,2,4,5,7,8,9,11,12,13,15,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,52,53,54,55,57,58,],[6,-5,-4,6,14,-3,-2,-9,-27,14,-26,-28,-8,-7,33,33,14,14,14,14,14,-6,-13,-15,-17,33,-11,33,14,-30,14,14,14,-21,14,14,-12,-14,-10,-29,-23,-24,-25,-20,-22,-19,-16,]),'OP_SUB':([14,],[23,]),'RPAREN':([12,15,16,17,20,21,26,29,30,31,32,34,35,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,29,34,41,-13,-15,-17,44,-11,48,-30,51,52,53,-21,54,55,-12,-14,-10,57,-29,-23,-24,-25,-20,-22,58,-19,-16,]),'OP_DIV':([14,],[25,]),'LBRACE':([0,2,4,5,8,9,19,28,],[1,-5,-4,1,-3,-2,-7,-6,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,57,58,],[7,15,17,-9,-27,15,26,-26,-28,-8,31,31,36,15,15,15,15,15,-13,-15,-17,31,46,-11,31,15,-30,15,15,15,-21,15,15,-12,-14,-18,56,-10,-29,-23,-24,-25,-20,-22,-19,-16,]),'OP_ADD':([14,],[27,]),'$end':([2,3,4,5,8,9,19,28,],[-5,0,-4,-1,-3,-2,-7,-6,]),'NUMBER':([7,11,12,13,15,16,18,23,24,25,26,27,29,34,36,37,38,39,40,41,42,43,44,48,50,51,52,53,54,55,57,],[12,-9,-27,12,-26,-28,-8,12,12,12,12,12,-13,-11,12,-30,12,12,12,-21,12,12,-12,-10,-29,-23,-24,-25,-20,-22,-19,]),'INPUT':([14,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([7,13,23,24,25,26,27,36,38,39,40,42,43,],[11,18,37,37,37,37,37,49,50,50,50,50,50,]),'expression_list':([7,],[13,]),'declaration':([20,21,32,35,],[30,30,45,45,]),'program':([0,],[3,]),'import_statement':([0,5,],[4,8,]),'parameter_list':([23,24,25,26,27,],[38,39,40,42,43,]),'declaration_list':([20,21,],[32,35,]),'statement_list':([0,],[5,]),'component':([0,5,],[2,9,]),'type':([33,],[47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
