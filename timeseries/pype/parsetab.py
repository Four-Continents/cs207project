
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'$end':([1,2,4,6,7,8,18,27,],[-1,-4,0,-5,-3,-2,-6,-7,]),'OP_MUL':([12,],[19,]),'OP_DIV':([12,],[24,]),'LPAREN':([0,1,2,6,7,8,10,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,47,48,49,50,53,54,55,56,58,],[3,3,-4,-5,-3,-2,12,-28,12,-9,-26,-27,-6,12,12,12,35,12,35,12,-7,-8,12,-30,12,12,12,35,-15,-11,-17,12,35,-13,12,-21,-24,-29,-22,-23,-14,-10,-25,-12,-20,-19,-16,]),'STRING':([10,13,14,15,16,17,19,21,22,24,26,28,29,30,31,32,33,37,39,41,42,43,44,45,47,48,50,53,54,55,56,],[13,-28,13,-9,-26,-27,13,13,13,13,13,-8,13,-30,13,13,13,-11,13,-13,13,-21,-24,-29,-22,-23,-10,-25,-12,-20,-19,]),'IMPORT':([3,],[9,]),'OP_ADD':([12,],[21,]),'OP_SUB':([12,],[22,]),'RBRACE':([13,14,15,16,17,28,37,41,43,44,47,48,50,53,54,55,56,],[-28,27,-9,-26,-27,-8,-11,-13,-21,-24,-22,-23,-10,-25,-12,-20,-19,]),'INPUT':([12,],[23,]),'ASSIGN':([12,],[20,]),'LBRACE':([0,1,2,6,7,8,18,27,],[5,5,-4,-5,-3,-2,-6,-7,]),'RPAREN':([11,13,16,17,23,25,26,29,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-28,-26,-27,37,41,43,44,-30,47,48,50,-15,-11,-17,53,54,-13,55,-21,-24,-29,56,-22,-23,-14,-10,-25,-12,-20,-19,58,-16,]),'ID':([5,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,58,],[10,11,16,26,-28,16,-9,-26,-27,16,31,16,16,38,16,38,16,-8,16,-30,16,16,16,38,52,-15,-11,-17,16,38,-13,16,-21,-24,-29,-22,-23,-14,-10,57,-18,-25,-12,-20,-19,-16,]),'OUTPUT':([12,],[25,]),'NUMBER':([10,13,14,15,16,17,19,21,22,24,26,28,29,30,31,32,33,37,39,41,42,43,44,45,47,48,50,53,54,55,56,],[17,-28,17,-9,-26,-27,17,17,17,17,17,-8,17,-30,17,17,17,-11,17,-13,17,-21,-24,-29,-22,-23,-10,-25,-12,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([35,],[51,]),'expression':([10,14,19,21,22,24,26,29,31,32,33,39,42,],[15,28,30,30,30,30,30,45,46,45,45,45,45,]),'parameter_list':([19,21,22,24,26,],[29,32,33,39,42,]),'statement_list':([0,],[1,]),'import_statement':([0,1,],[2,7,]),'expression_list':([10,],[14,]),'program':([0,],[4,]),'declaration':([23,25,34,40,],[36,36,49,49,]),'declaration_list':([23,25,],[34,40,]),'component':([0,1,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
