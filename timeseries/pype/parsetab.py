
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'NUMBER':([9,11,12,13,15,16,18,19,20,22,24,26,29,30,31,32,33,34,35,40,41,42,44,45,46,47,49,52,54,55,56,],[11,-27,-9,-28,-26,11,11,11,11,11,11,-8,11,-30,11,11,11,11,-13,11,-21,-11,-23,-29,-25,-24,-22,-12,-20,-10,-19,]),'OP_SUB':([14,],[18,]),'LBRACE':([0,1,2,6,7,8,27,28,],[4,-5,4,-4,-2,-3,-7,-6,]),'RBRACE':([11,12,13,15,16,26,35,41,42,44,46,47,49,52,54,55,56,],[-27,-9,-28,-26,27,-8,-13,-21,-11,-23,-25,-24,-22,-12,-20,-10,-19,]),'IMPORT':([5,],[10,]),'$end':([1,2,3,6,7,8,27,28,],[-5,-1,0,-4,-2,-3,-7,-6,]),'LPAREN':([0,1,2,6,7,8,9,11,12,13,15,16,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,],[5,-5,5,-4,-2,-3,14,-27,-9,-28,-26,14,14,14,14,14,36,14,36,-8,-7,-6,14,-30,14,14,14,14,-13,36,-17,-15,14,-21,-11,36,-23,-29,-25,-24,-22,-12,-14,-20,-10,-19,-16,]),'RPAREN':([11,13,15,17,23,24,25,29,30,31,32,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,],[-27,-28,-26,28,35,41,42,44,-30,46,47,49,-13,52,-17,-15,54,-21,-11,55,-23,-29,-25,-24,56,-22,-12,-14,-20,-10,-19,58,-16,]),'OP_MUL':([14,],[20,]),'STRING':([9,11,12,13,15,16,18,19,20,22,24,26,29,30,31,32,33,34,35,40,41,42,44,45,46,47,49,52,54,55,56,],[13,-27,-9,-28,-26,13,13,13,13,13,13,-8,13,-30,13,13,13,13,-13,13,-21,-11,-23,-29,-25,-24,-22,-12,-20,-10,-19,]),'OP_ADD':([14,],[22,]),'INPUT':([14,],[25,]),'OUTPUT':([14,],[23,]),'ID':([4,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[9,15,17,-27,-9,-28,24,-26,15,15,15,15,33,15,38,15,38,-8,15,-30,15,15,15,15,-13,51,38,-17,-15,15,-21,-11,38,-23,-29,-25,-24,-22,57,-18,-12,-14,-20,-10,-19,-16,]),'OP_DIV':([14,],[19,]),'ASSIGN':([14,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,2,],[1,7,]),'type':([36,],[50,]),'declaration':([23,25,37,43,],[39,39,53,53,]),'parameter_list':([18,19,20,22,24,],[29,31,32,34,40,]),'statement_list':([0,],[2,]),'program':([0,],[3,]),'declaration_list':([23,25,],[37,43,]),'expression_list':([9,],[16,]),'expression':([9,16,18,19,20,22,24,29,31,32,33,34,40,],[12,26,30,30,30,30,30,45,45,45,48,45,45,]),'import_statement':([0,2,],[6,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
