
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'OP_MUL':([15,],[19,]),'$end':([2,3,4,5,8,9,18,27,],[0,-4,-5,-1,-3,-2,-6,-7,]),'RPAREN':([11,12,13,14,20,21,23,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,32,35,39,44,-30,46,-21,-17,-13,49,-15,-11,52,53,54,55,-24,-29,-20,-12,-14,57,-10,-22,-25,-23,58,-19,-16,]),'ASSIGN':([15,],[22,]),'RBRACE':([12,13,14,16,17,28,32,35,39,44,46,49,52,53,54,55,57,],[-28,-26,-27,27,-9,-8,-21,-13,-11,-24,-20,-12,-10,-22,-25,-23,-19,]),'IMPORT':([1,],[7,]),'NUMBER':([10,12,13,14,16,17,19,20,24,25,26,28,29,30,31,32,35,38,39,41,42,43,44,45,46,49,52,53,54,55,57,],[14,-28,-26,-27,14,-9,14,14,14,14,14,-8,14,-30,14,-21,-13,14,-11,14,14,14,-24,-29,-20,-12,-10,-22,-25,-23,-19,]),'ID':([6,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[10,11,13,-28,-26,-27,20,13,-9,13,13,34,38,34,13,13,13,-8,13,-30,13,-21,48,-17,-13,34,-15,13,-11,34,13,13,13,-24,-29,-20,56,-18,-12,-14,-10,-22,-25,-23,-19,-16,]),'LPAREN':([0,3,4,5,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,52,53,54,55,57,58,],[1,-4,-5,1,-3,-2,15,-28,-26,-27,15,-9,-6,15,15,33,33,15,15,15,-7,-8,15,-30,15,-21,-17,-13,33,-15,15,-11,33,15,15,15,-24,-29,-20,-12,-14,-10,-22,-25,-23,-19,-16,]),'INPUT':([15,],[23,]),'STRING':([10,12,13,14,16,17,19,20,24,25,26,28,29,30,31,32,35,38,39,41,42,43,44,45,46,49,52,53,54,55,57,],[12,-28,-26,-27,12,-9,12,12,12,12,12,-8,12,-30,12,-21,-13,12,-11,12,12,12,-24,-29,-20,-12,-10,-22,-25,-23,-19,]),'OUTPUT':([15,],[21,]),'OP_ADD':([15,],[24,]),'OP_DIV':([15,],[25,]),'OP_SUB':([15,],[26,]),'LBRACE':([0,3,4,5,8,9,18,27,],[6,-4,-5,6,-3,-2,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([19,20,24,25,26,],[29,31,41,42,43,]),'program':([0,],[2,]),'import_statement':([0,5,],[3,8,]),'declaration_list':([21,23,],[36,40,]),'expression_list':([10,],[16,]),'expression':([10,16,19,20,24,25,26,29,31,38,41,42,43,],[17,28,30,30,30,30,30,45,45,51,45,45,45,]),'component':([0,5,],[4,9,]),'type':([33,],[47,]),'statement_list':([0,],[5,]),'declaration':([21,23,36,40,],[37,37,50,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
