
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'STRING':([10,12,13,14,15,17,20,22,23,24,25,27,33,34,35,36,37,38,39,41,42,43,45,48,49,50,51,52,53,54,57,],[13,-26,-28,13,-9,-27,-8,13,13,13,13,13,-13,13,-30,13,-21,13,13,-11,13,13,-12,-23,-29,-20,-25,-22,-10,-24,-19,]),'OP_SUB':([16,],[22,]),'OUTPUT':([16,],[21,]),'IMPORT':([4,],[7,]),'RBRACE':([12,13,14,15,17,20,33,37,41,45,48,50,51,52,53,54,57,],[-26,-28,19,-9,-27,-8,-13,-21,-11,-12,-23,-20,-25,-22,-10,-24,-19,]),'ID':([6,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,12,-26,-28,12,-9,23,-27,-8,30,12,12,12,12,30,12,43,30,-17,47,-15,-13,12,-30,12,-21,12,12,30,-11,12,12,-14,-12,56,-18,-23,-29,-20,-25,-22,-10,-24,-19,-16,]),'RPAREN':([11,12,13,17,21,23,26,29,30,32,33,34,35,36,37,38,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,33,37,41,45,-17,-15,-13,48,-30,50,-21,51,52,53,-11,54,-14,-12,-23,-29,-20,-25,-22,-10,-24,57,58,-19,-16,]),'OP_DIV':([16,],[24,]),'$end':([1,2,3,5,8,9,18,19,],[0,-5,-4,-1,-2,-3,-6,-7,]),'OP_ADD':([16,],[25,]),'INPUT':([16,],[26,]),'LPAREN':([0,2,3,5,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,57,58,],[4,-5,-4,4,-2,-3,16,-26,-28,16,-9,-27,-6,-7,-8,31,16,16,16,16,31,16,31,-17,-15,-13,16,-30,16,-21,16,16,31,-11,16,16,-14,-12,-23,-29,-20,-25,-22,-10,-24,-19,-16,]),'NUMBER':([10,12,13,14,15,17,20,22,23,24,25,27,33,34,35,36,37,38,39,41,42,43,45,48,49,50,51,52,53,54,57,],[17,-26,-28,17,-9,-27,-8,17,17,17,17,17,-13,17,-30,17,-21,17,17,-11,17,17,-12,-23,-29,-20,-25,-22,-10,-24,-19,]),'OP_MUL':([16,],[27,]),'ASSIGN':([16,],[28,]),'LBRACE':([0,2,3,5,8,9,18,19,],[6,-5,-4,6,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([10,14,22,23,24,25,27,34,36,38,39,42,43,],[15,20,35,35,35,35,35,49,49,49,49,49,55,]),'declaration_list':([21,26,],[29,40,]),'program':([0,],[1,]),'component':([0,5,],[2,8,]),'import_statement':([0,5,],[3,9,]),'type':([31,],[46,]),'expression_list':([10,],[14,]),'statement_list':([0,],[5,]),'declaration':([21,26,29,40,],[32,32,44,44,]),'parameter_list':([22,23,24,25,27,],[34,36,38,39,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
