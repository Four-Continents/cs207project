
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OP_SUB':([16,],[20,]),'LBRACE':([0,1,4,5,8,9,19,28,],[2,-4,2,-5,-2,-3,-7,-6,]),'STRING':([7,11,12,13,14,15,18,20,21,25,26,27,29,30,31,35,37,39,40,41,42,43,44,45,46,48,52,53,54,55,57,],[14,-9,-26,14,-28,-27,-8,14,14,14,14,14,14,-30,14,-11,14,-13,14,14,14,-21,-23,-29,-25,-10,-12,-22,-24,-20,-19,]),'OP_DIV':([16,],[21,]),'LPAREN':([0,1,4,5,7,8,9,11,12,13,14,15,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,54,55,57,58,],[6,-4,6,-5,16,-2,-3,-9,-26,16,-28,-27,-8,-7,16,16,34,34,16,16,16,-6,16,-30,16,34,-15,-11,-17,16,34,-13,16,16,16,-21,-23,-29,-25,-14,-10,-12,-22,-24,-20,-19,-16,]),'RPAREN':([12,14,15,17,22,24,27,29,30,31,32,33,35,36,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[-26,-28,-27,28,35,39,43,44,-30,46,48,-15,-11,-17,52,-13,53,54,55,-21,-23,-29,-25,-14,-10,57,-12,-22,-24,-20,58,-19,-16,]),'OP_MUL':([16,],[26,]),'INPUT':([16,],[22,]),'ASSIGN':([16,],[23,]),'OUTPUT':([16,],[24,]),'OP_ADD':([16,],[25,]),'NUMBER':([7,11,12,13,14,15,18,20,21,25,26,27,29,30,31,35,37,39,40,41,42,43,44,45,46,48,52,53,54,55,57,],[15,-9,-26,15,-28,-27,-8,15,15,15,15,15,15,-30,15,-11,15,-13,15,15,15,-21,-23,-29,-25,-10,-12,-22,-24,-20,-19,]),'IMPORT':([6,],[10,]),'$end':([1,3,4,5,8,9,19,28,],[-4,0,-1,-5,-2,-3,-7,-6,]),'ID':([2,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[7,12,17,-9,-26,12,-28,-27,27,-8,12,12,36,37,36,12,12,12,12,-30,12,36,-15,50,-11,-17,12,36,-13,12,12,12,-21,-23,-29,-25,-14,-10,56,-18,-12,-22,-24,-20,-19,-16,]),'RBRACE':([11,12,13,14,15,18,35,39,43,44,46,48,52,53,54,55,57,],[-9,-26,19,-28,-27,-8,-11,-13,-21,-23,-25,-10,-12,-22,-24,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[13,]),'type':([34,],[49,]),'declaration_list':([22,24,],[32,38,]),'program':([0,],[3,]),'declaration':([22,24,32,38,],[33,33,47,47,]),'parameter_list':([20,21,25,26,27,],[29,31,40,41,42,]),'statement_list':([0,],[4,]),'component':([0,4,],[5,8,]),'import_statement':([0,4,],[1,9,]),'expression':([7,13,20,21,25,26,27,29,31,37,40,41,42,],[11,18,30,30,30,30,30,45,45,51,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
