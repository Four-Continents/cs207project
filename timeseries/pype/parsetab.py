
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'RPAREN':([12,13,16,17,21,23,25,29,30,31,32,33,34,36,37,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-28,-26,-27,28,37,40,43,45,-30,46,47,-15,-17,51,-13,53,-21,54,55,-11,-29,-25,-23,-24,-14,-12,57,-20,-22,-10,58,-19,-16,]),'NUMBER':([7,12,13,14,15,16,18,19,20,23,24,27,29,30,31,32,37,38,39,40,41,43,44,45,46,47,51,53,54,55,57,],[16,-28,-26,-9,16,-27,16,16,16,16,16,-8,16,-30,16,16,-13,16,16,-21,16,-11,-29,-25,-23,-24,-12,-20,-22,-10,-19,]),'LPAREN':([0,4,5,6,7,9,10,12,13,14,15,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,50,51,53,54,55,57,58,],[3,3,-4,-5,11,-3,-2,-28,-26,-9,11,-27,11,11,11,35,11,11,35,-7,-8,-6,11,-30,11,11,-15,-17,35,-13,11,11,-21,11,35,-11,-29,-25,-23,-24,-14,-12,-20,-22,-10,-19,-16,]),'OP_MUL':([11,],[20,]),'IMPORT':([3,],[8,]),'$end':([1,4,5,6,9,10,26,28,],[0,-1,-4,-5,-3,-2,-7,-6,]),'RBRACE':([12,13,14,15,16,27,37,40,43,45,46,47,51,53,54,55,57,],[-28,-26,-9,26,-27,-8,-13,-21,-11,-25,-23,-24,-12,-20,-22,-10,-19,]),'OUTPUT':([11,],[21,]),'ASSIGN':([11,],[22,]),'ID':([2,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[7,13,17,23,-28,-26,-9,13,-27,13,13,13,34,38,13,13,34,-8,13,-30,13,13,-15,-17,49,34,-13,13,13,-21,13,34,-11,-29,-25,-23,-24,56,-18,-14,-12,-20,-22,-10,-19,-16,]),'STRING':([7,12,13,14,15,16,18,19,20,23,24,27,29,30,31,32,37,38,39,40,41,43,44,45,46,47,51,53,54,55,57,],[12,-28,-26,-9,12,-27,12,12,12,12,12,-8,12,-30,12,12,-13,12,12,-21,12,-11,-29,-25,-23,-24,-12,-20,-22,-10,-19,]),'OP_ADD':([11,],[24,]),'OP_DIV':([11,],[18,]),'INPUT':([11,],[25,]),'LBRACE':([0,4,5,6,9,10,26,28,],[2,2,-4,-5,-3,-2,-7,-6,]),'OP_SUB':([11,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration':([21,25,36,42,],[33,33,50,50,]),'type':([35,],[48,]),'declaration_list':([21,25,],[36,42,]),'expression_list':([7,],[15,]),'expression':([7,15,18,19,20,23,24,29,31,32,38,39,41,],[14,27,30,30,30,30,30,44,44,44,52,44,44,]),'statement_list':([0,],[4,]),'import_statement':([0,4,],[5,9,]),'component':([0,4,],[6,10,]),'parameter_list':([18,19,20,23,24,],[29,31,32,39,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
