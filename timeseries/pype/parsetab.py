
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'OUTPUT':([12,],[18,]),'OP_MUL':([12,],[21,]),'OP_DIV':([12,],[19,]),'ID':([4,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,],[9,11,17,-26,23,11,-27,-28,-9,29,11,36,11,11,11,11,29,-8,-17,-15,-13,45,29,11,-30,11,11,11,-21,11,11,29,-11,56,-18,-14,-12,-25,-29,-24,-22,-20,-23,-10,-19,-16,]),'IMPORT':([6,],[10,]),'OP_ADD':([12,],[22,]),'LBRACE':([0,2,3,5,7,8,27,28,],[4,4,-4,-5,-3,-2,-7,-6,]),'LPAREN':([0,2,3,5,7,8,9,11,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,51,52,53,54,55,57,58,],[6,6,-4,-5,-3,-2,12,-26,12,-27,-28,-9,32,12,12,12,12,12,32,-8,-7,-6,-17,-15,-13,32,12,-30,12,12,12,-21,12,12,32,-11,-14,-12,-25,-29,-24,-22,-20,-23,-10,-19,-16,]),'ASSIGN':([12,],[20,]),'NUMBER':([9,11,13,14,15,16,19,21,22,23,24,26,31,34,35,36,37,38,39,40,41,43,47,48,49,51,52,53,54,55,57,],[14,-26,14,-27,-28,-9,14,14,14,14,14,-8,-13,14,-30,14,14,14,-21,14,14,-11,-12,-25,-29,-24,-22,-20,-23,-10,-19,]),'INPUT':([12,],[25,]),'STRING':([9,11,13,14,15,16,19,21,22,23,24,26,31,34,35,36,37,38,39,40,41,43,47,48,49,51,52,53,54,55,57,],[15,-26,15,-27,-28,-9,15,15,15,15,15,-8,-13,15,-30,15,15,15,-21,15,15,-11,-12,-25,-29,-24,-22,-20,-23,-10,-19,]),'OP_SUB':([12,],[24,]),'RBRACE':([11,13,14,15,16,26,31,39,43,47,48,51,52,53,54,55,57,],[-26,27,-27,-28,-9,-8,-13,-21,-11,-12,-25,-24,-22,-20,-23,-10,-19,]),'$end':([1,2,3,5,7,8,27,28,],[0,-1,-4,-5,-3,-2,-7,-6,]),'RPAREN':([11,14,15,17,18,23,25,29,30,31,33,34,35,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,31,39,43,-17,-15,-13,47,48,-30,51,52,-21,53,54,55,-11,-14,-12,-25,-29,57,-24,-22,-20,-23,-10,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([19,21,22,23,24,],[34,37,38,40,41,]),'program':([0,],[1,]),'statement_list':([0,],[2,]),'type':([32,],[44,]),'declaration':([18,25,33,42,],[30,30,46,46,]),'import_statement':([0,2,],[3,7,]),'component':([0,2,],[5,8,]),'expression':([9,13,19,21,22,23,24,34,36,37,38,40,41,],[16,26,35,35,35,35,35,49,50,49,49,49,49,]),'declaration_list':([18,25,],[33,42,]),'expression_list':([9,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
