
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'STRING':([10,12,14,15,16,17,19,20,21,22,25,27,29,30,31,32,33,34,38,41,42,43,44,45,46,47,48,50,53,54,57,],[14,-9,-28,-26,-27,14,14,14,14,14,14,-8,-30,14,14,-21,14,14,-11,-13,14,14,-22,-29,-25,-20,-23,-10,-12,-24,-19,]),'OUTPUT':([13,],[24,]),'LPAREN':([0,1,2,5,7,8,10,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,57,58,],[3,-4,3,-5,-3,-2,13,-9,-28,-26,-27,13,-6,13,13,13,13,37,37,13,-8,-7,-30,13,13,-21,13,13,-15,37,-11,-17,37,-13,13,13,-22,-29,-25,-20,-23,-14,-10,-12,-24,-19,-16,]),'OP_DIV':([13,],[20,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[10,11,15,-9,21,-28,-26,-27,15,15,15,15,15,39,39,15,43,-8,-30,15,15,-21,15,15,-15,39,51,-11,-17,39,-13,15,15,-22,-29,-25,-20,-23,-14,-10,-18,56,-12,-24,-19,-16,]),'OP_SUB':([13,],[22,]),'INPUT':([13,],[23,]),'NUMBER':([10,12,14,15,16,17,19,20,21,22,25,27,29,30,31,32,33,34,38,41,42,43,44,45,46,47,48,50,53,54,57,],[16,-9,-28,-26,-27,16,16,16,16,16,16,-8,-30,16,16,-21,16,16,-11,-13,16,16,-22,-29,-25,-20,-23,-10,-12,-24,-19,]),'OP_ADD':([13,],[19,]),'RBRACE':([12,14,15,16,17,27,32,38,41,44,46,47,48,50,53,54,57,],[-9,-28,-26,-27,28,-8,-21,-11,-13,-22,-25,-20,-23,-10,-12,-24,-19,]),'OP_MUL':([13,],[25,]),'IMPORT':([3,],[9,]),'ASSIGN':([13,],[26,]),'RPAREN':([11,14,15,16,21,23,24,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,46,47,48,49,50,53,54,55,56,57,58,],[18,-28,-26,-27,32,38,41,-30,44,46,-21,47,48,-15,50,-11,-17,53,-13,54,-22,-29,-25,-20,-23,-14,-10,-12,-24,57,58,-19,-16,]),'$end':([1,2,4,5,7,8,18,28,],[-4,-1,0,-5,-3,-2,-6,-7,]),'LBRACE':([0,1,2,5,7,8,18,28,],[6,-4,6,-5,-3,-2,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([23,24,36,40,],[35,35,49,49,]),'import_statement':([0,2,],[1,7,]),'declaration_list':([23,24,],[36,40,]),'expression_list':([10,],[17,]),'expression':([10,17,19,20,21,22,25,30,31,33,34,42,43,],[12,27,29,29,29,29,29,45,45,45,45,45,55,]),'statement_list':([0,],[2,]),'program':([0,],[4,]),'component':([0,2,],[5,8,]),'parameter_list':([19,20,21,22,25,],[30,31,33,34,42,]),'type':([37,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
