
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'ASSIGN':([13,],[18,]),'OUTPUT':([13,],[19,]),'INPUT':([13,],[23,]),'LBRACE':([0,2,3,6,9,10,27,28,],[1,-5,-4,1,-2,-3,-7,-6,]),'$end':([2,3,5,6,9,10,27,28,],[-5,-4,0,-1,-2,-3,-7,-6,]),'LPAREN':([0,2,3,6,7,9,10,11,12,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,58,],[4,-5,-4,4,13,-2,-3,-27,-9,-26,-28,13,34,13,13,13,34,13,13,-8,-7,-6,13,-17,34,-13,-15,-30,13,13,-21,13,34,-11,13,13,-12,-14,-29,-23,-25,-20,-10,-24,-22,-19,-16,]),'OP_SUB':([13,],[20,]),'OP_DIV':([13,],[21,]),'RBRACE':([11,12,14,15,16,26,32,38,41,45,50,51,52,53,54,55,56,],[-27,-9,-26,-28,27,-8,-13,-21,-11,-12,-23,-25,-20,-10,-24,-22,-19,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[7,14,17,-27,-9,22,-26,-28,14,29,30,14,14,14,30,14,14,-8,14,-17,30,-13,-15,47,-30,14,14,-21,14,30,-11,14,14,-12,-14,-18,57,-29,-23,-25,-20,-10,-24,-22,-19,-16,]),'IMPORT':([4,],[8,]),'OP_MUL':([13,],[24,]),'OP_ADD':([13,],[25,]),'STRING':([7,11,12,14,15,16,20,21,22,24,25,26,29,32,35,36,37,38,39,41,42,43,45,49,50,51,52,53,54,55,56,],[15,-27,-9,-26,-28,15,15,15,15,15,15,-8,15,-13,-30,15,15,-21,15,-11,15,15,-12,-29,-23,-25,-20,-10,-24,-22,-19,]),'NUMBER':([7,11,12,14,15,16,20,21,22,24,25,26,29,32,35,36,37,38,39,41,42,43,45,49,50,51,52,53,54,55,56,],[11,-27,-9,-26,-28,11,11,11,11,11,11,-8,11,-13,-30,11,11,-21,11,-11,11,11,-12,-29,-23,-25,-20,-10,-24,-22,-19,]),'RPAREN':([11,14,15,17,19,22,23,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,32,38,41,-17,45,-13,-15,-30,50,51,-21,52,53,-11,54,55,56,-12,-14,-29,-23,-25,-20,-10,-24,-22,-19,58,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([34,],[48,]),'declaration_list':([19,23,],[31,40,]),'component':([0,6,],[2,9,]),'declaration':([19,23,31,40,],[33,33,46,46,]),'import_statement':([0,6,],[3,10,]),'expression_list':([7,],[16,]),'expression':([7,16,20,21,22,24,25,29,36,37,39,42,43,],[12,26,35,35,35,35,35,44,49,49,49,49,49,]),'program':([0,],[5,]),'statement_list':([0,],[6,]),'parameter_list':([20,21,22,24,25,],[36,37,39,42,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
