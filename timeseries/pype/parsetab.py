
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'ID':([4,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[9,11,17,-26,-9,11,-27,-28,20,-8,11,11,33,11,11,40,33,11,-30,-21,11,11,-17,-15,33,49,-11,11,11,11,33,-13,11,-29,-20,-25,-14,-10,-18,56,-24,-23,-12,-22,-19,-16,]),'OP_SUB':([16,],[24,]),'RBRACE':([11,12,13,14,15,19,30,37,42,45,46,48,51,52,54,55,57,],[-26,-9,18,-27,-28,-8,-21,-11,-13,-20,-25,-10,-24,-23,-12,-22,-19,]),'OP_MUL':([16,],[23,]),'LBRACE':([0,1,2,3,7,8,18,28,],[4,4,-4,-5,-3,-2,-7,-6,]),'OP_DIV':([16,],[21,]),'STRING':([9,11,12,13,14,15,19,20,21,23,24,27,29,30,31,32,37,38,39,40,42,43,44,45,46,48,51,52,54,55,57,],[15,-26,-9,15,-27,-28,-8,15,15,15,15,15,-30,-21,15,15,-11,15,15,15,-13,15,-29,-20,-25,-10,-24,-23,-12,-22,-19,]),'RPAREN':([11,14,15,17,20,22,26,29,30,31,32,33,34,35,37,38,39,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,30,37,42,-30,-21,45,46,-17,-15,48,-11,51,52,54,-13,55,-29,-20,-25,-14,-10,-24,-23,57,-12,-22,58,-19,-16,]),'ASSIGN':([16,],[25,]),'NUMBER':([9,11,12,13,14,15,19,20,21,23,24,27,29,30,31,32,37,38,39,40,42,43,44,45,46,48,51,52,54,55,57,],[14,-26,-9,14,-27,-28,-8,14,14,14,14,14,-30,-21,14,14,-11,14,14,14,-13,14,-29,-20,-25,-10,-24,-23,-12,-22,-19,]),'$end':([1,2,3,6,7,8,18,28,],[-1,-4,-5,0,-3,-2,-7,-6,]),'IMPORT':([5,],[10,]),'OUTPUT':([16,],[26,]),'LPAREN':([0,1,2,3,7,8,9,11,12,13,14,15,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,51,52,54,55,57,58,],[5,5,-4,-5,-3,-2,16,-26,-9,16,-27,-28,-7,-8,16,16,36,16,16,36,16,-6,-30,-21,16,16,-17,-15,36,-11,16,16,16,36,-13,16,-29,-20,-25,-14,-10,-24,-23,-12,-22,-19,-16,]),'OP_ADD':([16,],[27,]),'INPUT':([16,],[22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([22,26,35,41,],[34,34,47,47,]),'statement_list':([0,],[1,]),'parameter_list':([20,21,23,24,27,],[31,32,38,39,43,]),'type':([36,],[50,]),'expression':([9,13,20,21,23,24,27,31,32,38,39,40,43,],[12,19,29,29,29,29,29,44,44,44,44,53,44,]),'import_statement':([0,1,],[2,7,]),'component':([0,1,],[3,8,]),'expression_list':([9,],[13,]),'declaration_list':([22,26,],[35,41,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
