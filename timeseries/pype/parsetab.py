
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '371EF72B57DF7D01BB0A145AD73D5ADC'
    
_lr_action_items = {'INPUT':([12,],[20,]),'$end':([1,3,4,6,8,9,19,28,],[-4,-5,-1,0,-3,-2,-7,-6,]),'OP_ADD':([12,],[21,]),'LBRACE':([0,1,3,4,8,9,19,28,],[2,-4,-5,2,-3,-2,-7,-6,]),'OUTPUT':([12,],[22,]),'ASSIGN':([12,],[26,]),'LPAREN':([0,1,3,4,7,8,9,11,13,14,15,16,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[5,-4,-5,5,12,-3,-2,12,-9,-26,-27,-28,-8,-7,32,12,32,12,12,12,12,-6,-15,32,-17,-11,-30,12,32,-13,12,12,-21,12,12,12,-14,-10,-29,-22,-12,-23,-20,-25,-24,-19,-16,]),'OP_SUB':([12,],[23,]),'IMPORT':([5,],[10,]),'ID':([2,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[7,14,17,14,24,-9,-26,-27,-28,-8,31,14,31,14,14,14,42,14,-15,31,-17,47,-11,-30,14,31,-13,14,14,-21,14,14,14,-14,-10,56,-18,-29,-22,-12,-23,-20,-25,-24,-19,-16,]),'NUMBER':([7,11,13,14,15,16,18,21,23,24,25,27,33,34,35,37,38,39,40,41,42,43,45,48,49,50,51,52,53,55,57,],[15,15,-9,-26,-27,-28,-8,15,15,15,15,15,-11,-30,15,-13,15,15,-21,15,15,15,-10,-29,-22,-12,-23,-20,-25,-24,-19,]),'OP_DIV':([12,],[25,]),'RBRACE':([11,13,14,15,16,18,33,37,40,45,49,50,51,52,53,55,57,],[19,-9,-26,-27,-28,-8,-11,-13,-21,-10,-22,-12,-23,-20,-25,-24,-19,]),'STRING':([7,11,13,14,15,16,18,21,23,24,25,27,33,34,35,37,38,39,40,41,42,43,45,48,49,50,51,52,53,55,57,],[16,16,-9,-26,-27,-28,-8,16,16,16,16,16,-11,-30,16,-13,16,16,-21,16,16,16,-10,-29,-22,-12,-23,-20,-25,-24,-19,]),'OP_MUL':([12,],[27,]),'RPAREN':([14,15,16,17,20,22,24,29,30,31,33,34,35,36,37,38,39,40,41,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,33,37,40,-15,45,-17,-11,-30,49,50,-13,51,52,-21,53,55,-14,-10,-29,-22,-12,-23,-20,-25,57,-24,58,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[11,]),'expression':([7,11,21,23,24,25,27,35,38,39,41,42,43,],[13,18,34,34,34,34,34,48,48,48,48,54,48,]),'type':([32,],[46,]),'declaration':([20,22,30,36,],[29,29,44,44,]),'declaration_list':([20,22,],[30,36,]),'import_statement':([0,4,],[1,8,]),'parameter_list':([21,23,24,25,27,],[35,38,39,41,43,]),'component':([0,4,],[3,9,]),'statement_list':([0,],[4,]),'program':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
