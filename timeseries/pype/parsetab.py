
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'INPUT':([14,],[18,]),'IMPORT':([5,],[8,]),'OUTPUT':([14,],[19,]),'RBRACE':([11,12,13,15,16,27,33,35,42,45,48,49,52,53,54,55,57,],[-27,-9,-28,26,-26,-8,-11,-13,-21,-10,-12,-25,-23,-22,-24,-20,-19,]),'OP_DIV':([14,],[20,]),'NUMBER':([7,11,12,13,15,16,20,22,23,24,25,27,33,35,36,37,38,39,40,41,42,43,45,48,49,50,52,53,54,55,57,],[11,-27,-9,-28,11,-26,11,11,11,11,11,-8,-11,-13,-30,11,11,11,11,11,-21,11,-10,-12,-25,-29,-23,-22,-24,-20,-19,]),'$end':([1,2,3,6,9,10,26,28,],[-4,-5,0,-1,-3,-2,-7,-6,]),'ASSIGN':([14,],[21,]),'LBRACE':([0,1,2,6,9,10,26,28,],[4,-4,-5,4,-3,-2,-7,-6,]),'STRING':([7,11,12,13,15,16,20,22,23,24,25,27,33,35,36,37,38,39,40,41,42,43,45,48,49,50,52,53,54,55,57,],[13,-27,-9,-28,13,-26,13,13,13,13,13,-8,-11,-13,-30,13,13,13,13,13,-21,13,-10,-12,-25,-29,-23,-22,-24,-20,-19,]),'OP_SUB':([14,],[22,]),'OP_ADD':([14,],[23,]),'LPAREN':([0,1,2,6,7,9,10,11,12,13,15,16,18,19,20,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,52,53,54,55,57,58,],[5,-4,-5,5,14,-3,-2,-27,-9,-28,14,-26,31,31,14,14,14,14,14,-7,-8,-6,31,-15,-17,-11,31,-13,-30,14,14,14,14,14,-21,14,-14,-10,-12,-25,-29,-23,-22,-24,-20,-19,-16,]),'OP_MUL':([14,],[24,]),'RPAREN':([11,13,16,17,18,19,25,29,30,32,33,34,35,36,37,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-28,-26,28,33,35,42,45,-15,-17,-11,48,-13,-30,49,52,53,54,-21,55,-14,-10,-12,-25,-29,57,-23,-22,-24,-20,58,-19,-16,]),'ID':([4,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[7,16,17,-27,-9,-28,25,16,-26,32,32,16,38,16,16,16,16,-8,32,-15,47,-17,-11,32,-13,-30,16,16,16,16,16,-21,16,-14,-10,56,-18,-12,-25,-29,-23,-22,-24,-20,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import_statement':([0,6,],[1,9,]),'component':([0,6,],[2,10,]),'type':([31,],[46,]),'program':([0,],[3,]),'declaration_list':([18,19,],[29,34,]),'declaration':([18,19,29,34,],[30,30,44,44,]),'expression_list':([7,],[15,]),'expression':([7,15,20,22,23,24,25,37,38,39,40,41,43,],[12,27,36,36,36,36,36,50,51,50,50,50,50,]),'statement_list':([0,],[6,]),'parameter_list':([20,22,23,24,25,],[37,39,40,41,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_add','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_subtract','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
