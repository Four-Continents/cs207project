
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'OP_DIV':([12,],[22,]),'RPAREN':([11,14,16,17,19,24,26,30,31,32,33,34,35,36,37,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[18,-26,-27,-28,30,39,42,-11,-15,46,-17,-30,48,50,51,-13,53,54,-21,55,-10,-14,-22,-29,-24,-25,57,-12,-23,-20,58,-19,-16,]),'INPUT':([12,],[19,]),'OP_ADD':([12,],[20,]),'IMPORT':([1,],[7,]),'OP_MUL':([12,],[21,]),'LPAREN':([0,2,3,5,8,9,10,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,53,54,55,57,58,],[1,-5,-4,1,-2,-3,12,12,-26,-9,-27,-28,-6,29,12,12,12,29,12,12,-8,-7,-11,-15,29,-17,-30,12,12,12,12,-13,29,12,-21,12,-10,-14,-22,-29,-24,-25,-12,-23,-20,-19,-16,]),'RBRACE':([13,14,15,16,17,27,30,39,42,46,48,50,51,53,54,55,57,],[28,-26,-9,-27,-28,-8,-11,-13,-21,-10,-22,-24,-25,-12,-23,-20,-19,]),'STRING':([10,13,14,15,16,17,20,21,22,25,26,27,30,34,35,36,37,38,39,41,42,43,46,48,49,50,51,53,54,55,57,],[17,17,-26,-9,-27,-28,17,17,17,17,17,-8,-11,-30,17,17,17,17,-13,17,-21,17,-10,-22,-29,-24,-25,-12,-23,-20,-19,]),'ID':([6,7,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,14,26,14,-26,-9,-27,-28,33,14,14,14,38,33,14,14,-8,45,-11,-15,33,-17,-30,14,14,14,14,-13,33,14,-21,14,56,-18,-10,-14,-22,-29,-24,-25,-12,-23,-20,-19,-16,]),'OP_SUB':([12,],[25,]),'OUTPUT':([12,],[24,]),'$end':([2,3,4,5,8,9,18,28,],[-5,-4,0,-1,-2,-3,-6,-7,]),'ASSIGN':([12,],[23,]),'NUMBER':([10,13,14,15,16,17,20,21,22,25,26,27,30,34,35,36,37,38,39,41,42,43,46,48,49,50,51,53,54,55,57,],[16,16,-26,-9,-27,-28,16,16,16,16,16,-8,-11,-30,16,16,16,16,-13,16,-21,16,-10,-22,-29,-24,-25,-12,-23,-20,-19,]),'LBRACE':([0,2,3,5,8,9,18,28,],[6,-5,-4,6,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([29,],[44,]),'expression_list':([10,],[13,]),'component':([0,5,],[2,8,]),'import_statement':([0,5,],[3,9,]),'expression':([10,13,20,21,22,25,26,35,36,37,38,41,43,],[15,27,34,34,34,34,34,49,49,49,52,49,49,]),'declaration_list':([19,24,],[32,40,]),'declaration':([19,24,32,40,],[31,31,47,47,]),'program':([0,],[4,]),'statement_list':([0,],[5,]),'parameter_list':([20,21,22,25,26,],[35,36,37,41,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
