
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'$end':([1,2,3,4,7,8,18,28,],[-5,-1,-4,0,-2,-3,-7,-6,]),'RBRACE':([11,12,13,14,15,19,35,38,42,44,46,47,49,52,53,54,57,],[18,-27,-28,-9,-26,-8,-11,-21,-13,-24,-22,-23,-10,-20,-25,-12,-19,]),'ASSIGN':([16,],[27,]),'OP_DIV':([16,],[25,]),'RPAREN':([12,13,15,17,23,24,26,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,46,47,48,49,52,53,54,55,56,57,58,],[-27,-28,-26,28,35,38,42,44,-30,46,47,49,-15,-11,-17,-21,52,53,54,-13,-24,-29,-22,-23,-14,-10,-20,-25,-12,57,58,-19,-16,]),'NUMBER':([9,11,12,13,14,15,19,20,21,22,24,25,29,30,31,32,35,38,39,40,42,43,44,45,46,47,49,52,53,54,57,],[12,12,-27,-28,-9,-26,-8,12,12,12,12,12,12,-30,12,12,-11,-21,12,12,-13,12,-24,-29,-22,-23,-10,-20,-25,-12,-19,]),'OUTPUT':([16,],[26,]),'OP_SUB':([16,],[22,]),'IMPORT':([6,],[10,]),'INPUT':([16,],[23,]),'OP_ADD':([16,],[21,]),'OP_MUL':([16,],[20,]),'ID':([5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[9,15,17,15,-27,-28,-9,-26,24,-8,15,15,15,36,15,15,36,43,15,-30,15,15,36,-15,-11,-17,50,-21,15,15,36,-13,15,-24,-29,-22,-23,-14,-10,-18,56,-20,-25,-12,-19,-16,]),'STRING':([9,11,12,13,14,15,19,20,21,22,24,25,29,30,31,32,35,38,39,40,42,43,44,45,46,47,49,52,53,54,57,],[13,13,-27,-28,-9,-26,-8,13,13,13,13,13,13,-30,13,13,-11,-21,13,13,-13,13,-24,-29,-22,-23,-10,-20,-25,-12,-19,]),'LBRACE':([0,1,2,3,7,8,18,28,],[5,-5,5,-4,-2,-3,-7,-6,]),'LPAREN':([0,1,2,3,7,8,9,11,12,13,14,15,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,57,58,],[6,-5,6,-4,-2,-3,16,16,-27,-28,-9,-26,-7,-8,16,16,16,37,16,16,37,-6,16,-30,16,16,37,-15,-11,-17,-21,16,16,37,-13,16,-24,-29,-22,-23,-14,-10,-20,-25,-12,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([20,21,22,24,25,],[29,31,32,39,40,]),'component':([0,2,],[1,7,]),'expression_list':([9,],[11,]),'statement_list':([0,],[2,]),'declaration_list':([23,26,],[33,41,]),'declaration':([23,26,33,41,],[34,34,48,48,]),'expression':([9,11,20,21,22,24,25,29,31,32,39,40,43,],[14,19,30,30,30,30,30,45,45,45,45,45,55,]),'type':([37,],[51,]),'program':([0,],[4,]),'import_statement':([0,2,],[3,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
