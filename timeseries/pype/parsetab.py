
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'IMPORT':([2,],[7,]),'OP_ADD':([13,],[19,]),'INPUT':([13,],[20,]),'RPAREN':([11,12,16,17,20,21,26,29,30,31,32,33,35,36,37,39,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-26,-28,-27,32,36,42,44,-30,-15,-11,47,-17,-13,50,52,53,54,-21,55,-22,-29,-14,-10,-12,57,-24,-23,-25,-20,58,-19,-16,]),'ID':([3,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[8,11,12,-26,26,12,-9,-28,-27,12,35,35,38,12,12,12,12,-8,12,-30,-15,-11,35,48,-17,-13,35,12,12,12,12,-21,12,-22,-29,-14,-10,-18,56,-12,-24,-23,-25,-20,-19,-16,]),'$end':([1,4,5,6,9,10,18,27,],[-5,-1,0,-4,-2,-3,-6,-7,]),'LPAREN':([0,1,4,6,8,9,10,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,50,52,53,54,55,57,58,],[2,-5,2,-4,13,-2,-3,-26,13,-9,-28,-27,-6,13,34,34,13,13,13,13,-7,-8,13,-30,-15,-11,34,-17,-13,34,13,13,13,13,-21,13,-22,-29,-14,-10,-12,-24,-23,-25,-20,-19,-16,]),'LBRACE':([0,1,4,6,9,10,18,27,],[3,-5,3,-4,-2,-3,-6,-7,]),'OP_DIV':([13,],[25,]),'ASSIGN':([13,],[22,]),'OP_SUB':([13,],[24,]),'OUTPUT':([13,],[21,]),'STRING':([8,12,14,15,16,17,19,23,24,25,26,28,29,30,32,36,38,39,40,41,42,43,44,45,47,50,52,53,54,55,57,],[16,-26,16,-9,-28,-27,16,16,16,16,16,-8,16,-30,-11,-13,16,16,16,16,-21,16,-22,-29,-10,-12,-24,-23,-25,-20,-19,]),'RBRACE':([12,14,15,16,17,28,32,36,42,44,47,50,52,53,54,55,57,],[-26,27,-9,-28,-27,-8,-11,-13,-21,-22,-10,-12,-24,-23,-25,-20,-19,]),'OP_MUL':([13,],[23,]),'NUMBER':([8,12,14,15,16,17,19,23,24,25,26,28,29,30,32,36,38,39,40,41,42,43,44,45,47,50,52,53,54,55,57,],[17,-26,17,-9,-28,-27,17,17,17,17,17,-8,17,-30,-11,-13,17,17,17,17,-21,17,-22,-29,-10,-12,-24,-23,-25,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([20,21,33,37,],[31,31,46,46,]),'component':([0,4,],[1,9,]),'declaration_list':([20,21,],[33,37,]),'expression_list':([8,],[14,]),'parameter_list':([19,23,24,25,26,],[29,39,40,41,43,]),'expression':([8,14,19,23,24,25,26,29,38,39,40,41,43,],[15,28,30,30,30,30,30,45,51,45,45,45,45,]),'type':([34,],[49,]),'statement_list':([0,],[4,]),'program':([0,],[5,]),'import_statement':([0,4,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
