
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'OP_DIV':([15,],[20,]),'OP_ADD':([15,],[21,]),'LBRACE':([0,4,5,6,9,10,18,28,],[2,2,-5,-4,-2,-3,-7,-6,]),'IMPORT':([3,],[8,]),'RPAREN':([12,13,14,17,22,24,27,29,30,31,32,33,34,35,36,38,39,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,32,35,42,44,-30,46,-21,47,48,-11,-15,-17,51,54,-13,55,-25,-29,-22,-20,-23,-10,-14,57,-24,-12,58,-19,-16,]),'ID':([2,7,8,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[7,12,17,12,-26,-27,-28,22,-9,-8,12,12,12,12,38,40,12,38,12,-30,12,-21,12,12,-11,-15,49,-17,38,12,12,-13,38,-25,-29,-22,-20,-23,-18,56,-10,-14,-24,-12,-19,-16,]),'NUMBER':([7,11,12,13,14,16,19,20,21,22,23,26,29,30,31,32,33,34,35,40,41,42,44,45,46,47,48,51,54,55,57,],[13,13,-26,-27,-28,-9,-8,13,13,13,13,13,13,-30,13,-21,13,13,-11,13,13,-13,-25,-29,-22,-20,-23,-10,-24,-12,-19,]),'STRING':([7,11,12,13,14,16,19,20,21,22,23,26,29,30,31,32,33,34,35,40,41,42,44,45,46,47,48,51,54,55,57,],[14,14,-26,-27,-28,-9,-8,14,14,14,14,14,14,-30,14,-21,14,14,-11,14,14,-13,-25,-29,-22,-20,-23,-10,-24,-12,-19,]),'OUTPUT':([15,],[27,]),'OP_MUL':([15,],[26,]),'RBRACE':([11,12,13,14,16,19,32,35,42,44,46,47,48,51,54,55,57,],[18,-26,-27,-28,-9,-8,-21,-11,-13,-25,-22,-20,-23,-10,-24,-12,-19,]),'INPUT':([15,],[24,]),'ASSIGN':([15,],[25,]),'LPAREN':([0,4,5,6,7,9,10,11,12,13,14,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,51,52,54,55,57,58,],[3,3,-5,-4,15,-2,-3,15,-26,-27,-28,-9,-7,-8,15,15,15,15,37,15,37,-6,15,-30,15,-21,15,15,-11,-15,-17,37,15,15,-13,37,-25,-29,-22,-20,-23,-10,-14,-24,-12,-19,-16,]),'OP_SUB':([15,],[23,]),'$end':([1,4,5,6,9,10,18,28,],[0,-1,-5,-4,-2,-3,-7,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[11,]),'parameter_list':([20,21,22,23,26,],[29,31,33,34,41,]),'program':([0,],[1,]),'type':([37,],[50,]),'expression':([7,11,20,21,22,23,26,29,31,33,34,40,41,],[16,19,30,30,30,30,30,45,45,45,45,53,45,]),'declaration':([24,27,39,43,],[36,36,52,52,]),'statement_list':([0,],[4,]),'component':([0,4,],[5,9,]),'declaration_list':([24,27,],[39,43,]),'import_statement':([0,4,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
