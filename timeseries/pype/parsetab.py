
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'NUMBER':([7,11,12,13,14,16,18,21,22,24,25,27,32,34,35,36,38,39,40,41,42,43,45,48,49,50,51,52,53,55,57,],[11,-27,-28,-9,11,-26,-8,11,11,11,11,11,-13,11,-30,11,-11,11,11,11,11,-21,-12,-29,-25,-22,-10,-24,-23,-20,-19,]),'$end':([2,3,5,6,8,9,19,28,],[-4,-1,0,-5,-3,-2,-7,-6,]),'IMPORT':([4,],[10,]),'STRING':([7,11,12,13,14,16,18,21,22,24,25,27,32,34,35,36,38,39,40,41,42,43,45,48,49,50,51,52,53,55,57,],[12,-27,-28,-9,12,-26,-8,12,12,12,12,12,-13,12,-30,12,-11,12,12,12,12,-21,-12,-29,-25,-22,-10,-24,-23,-20,-19,]),'LBRACE':([0,2,3,6,8,9,19,28,],[1,-4,1,-5,-3,-2,-7,-6,]),'OP_DIV':([15,],[21,]),'RBRACE':([11,12,13,14,16,18,32,38,43,45,49,50,51,52,53,55,57,],[-27,-28,-9,19,-26,-8,-13,-11,-21,-12,-25,-22,-10,-24,-23,-20,-19,]),'OP_ADD':([15,],[22,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[7,16,17,-27,-28,-9,16,27,-26,-8,33,16,16,33,16,16,41,16,-15,33,47,-13,-17,16,-30,16,33,-11,16,16,16,16,-21,-14,-12,56,-18,-29,-25,-22,-10,-24,-23,-20,-19,-16,]),'INPUT':([15,],[23,]),'OP_MUL':([15,],[24,]),'OP_SUB':([15,],[25,]),'ASSIGN':([15,],[26,]),'LPAREN':([0,2,3,6,7,8,9,11,12,13,14,16,18,19,20,21,22,23,24,25,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[4,-4,4,-5,15,-3,-2,-27,-28,-9,15,-26,-8,-7,31,15,15,31,15,15,15,-6,-15,31,-13,-17,15,-30,15,31,-11,15,15,15,15,-21,-14,-12,-29,-25,-22,-10,-24,-23,-20,-19,-16,]),'RPAREN':([11,12,16,17,20,23,27,29,30,32,33,34,35,36,37,38,39,40,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[-27,-28,-26,28,32,38,43,-15,45,-13,-17,49,-30,50,51,-11,52,53,55,-21,-14,-12,-29,-25,-22,-10,-24,-23,57,-20,58,-19,-16,]),'OUTPUT':([15,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[14,]),'type':([31,],[46,]),'declaration':([20,23,30,37,],[29,29,44,44,]),'parameter_list':([21,22,24,25,27,],[34,36,39,40,42,]),'declaration_list':([20,23,],[30,37,]),'statement_list':([0,],[3,]),'expression':([7,14,21,22,24,25,27,34,36,39,40,41,42,],[13,18,35,35,35,35,35,48,48,48,48,54,48,]),'program':([0,],[5,]),'import_statement':([0,3,],[2,8,]),'component':([0,3,],[6,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
