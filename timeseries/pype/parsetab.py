
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'RPAREN':([13,14,15,17,20,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,44,45,46,47,48,49,50,51,54,55,56,57,58,],[-26,-28,-27,28,29,36,41,-21,44,-30,46,47,48,49,-13,-15,50,-17,-11,54,-20,-29,-22,-24,-25,-23,-12,-14,-10,57,58,-19,-16,]),'OP_ADD':([16,],[21,]),'OP_SUB':([16,],[24,]),'OP_MUL':([16,],[22,]),'ASSIGN':([16,],[27,]),'IMPORT':([6,],[10,]),'RBRACE':([11,12,13,14,15,19,29,36,41,44,46,47,48,49,50,54,57,],[18,-9,-26,-28,-27,-8,-21,-13,-11,-20,-22,-24,-25,-23,-12,-10,-19,]),'OP_DIV':([16,],[23,]),'LBRACE':([0,1,2,4,7,8,18,28,],[5,5,-4,-5,-3,-2,-7,-6,]),'ID':([5,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[9,13,17,13,-9,-26,-28,-27,20,-8,13,13,13,13,13,39,39,43,-21,13,-30,13,13,13,13,-13,-15,39,-17,53,-11,39,13,-20,-29,-22,-24,-25,-23,-12,-14,56,-18,-10,-19,-16,]),'$end':([1,2,3,4,7,8,18,28,],[-1,-4,0,-5,-3,-2,-7,-6,]),'STRING':([9,11,12,13,14,15,19,20,21,22,23,24,29,30,31,32,33,34,35,36,41,43,44,45,46,47,48,49,50,54,57,],[14,14,-9,-26,-28,-27,-8,14,14,14,14,14,-21,14,-30,14,14,14,14,-13,-11,14,-20,-29,-22,-24,-25,-23,-12,-10,-19,]),'OUTPUT':([16,],[25,]),'INPUT':([16,],[26,]),'NUMBER':([9,11,12,13,14,15,19,20,21,22,23,24,29,30,31,32,33,34,35,36,41,43,44,45,46,47,48,49,50,54,57,],[15,15,-9,-26,-28,-27,-8,15,15,15,15,15,-21,15,-30,15,15,15,15,-13,-11,15,-20,-29,-22,-24,-25,-23,-12,-10,-19,]),'LPAREN':([0,1,2,4,7,8,9,11,12,13,14,15,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,54,57,58,],[6,6,-4,-5,-3,-2,16,16,-9,-26,-28,-27,-7,-8,16,16,16,16,16,40,40,-6,-21,16,-30,16,16,16,16,-13,-15,40,-17,-11,40,16,-20,-29,-22,-24,-25,-23,-12,-14,-10,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([40,],[52,]),'statement_list':([0,],[1,]),'import_statement':([0,1,],[2,7,]),'parameter_list':([20,21,22,23,24,],[30,32,33,34,35,]),'program':([0,],[3,]),'component':([0,1,],[4,8,]),'expression_list':([9,],[11,]),'declaration_list':([25,26,],[38,42,]),'expression':([9,11,20,21,22,23,24,30,32,33,34,35,43,],[12,19,31,31,31,31,31,45,45,45,45,45,55,]),'declaration':([25,26,38,42,],[37,37,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
