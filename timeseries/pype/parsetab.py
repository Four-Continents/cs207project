
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'ASSIGN':([15,],[20,]),'INPUT':([15,],[21,]),'STRING':([7,11,12,13,14,16,18,22,23,24,26,27,29,30,35,36,37,38,40,41,42,43,45,49,50,51,52,53,54,55,56,],[11,-28,11,-9,-27,-26,-8,11,11,11,11,11,11,-11,-30,11,11,11,-13,-21,11,11,-10,-29,-25,-24,-22,-12,-20,-23,-19,]),'OP_DIV':([15,],[22,]),'OUTPUT':([15,],[25,]),'RPAREN':([11,14,16,17,21,25,26,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,30,40,41,-11,45,-17,-15,-30,50,51,52,53,-13,-21,54,55,56,-10,-14,-29,-25,-24,-22,-12,-20,-23,-19,58,-16,]),'IMPORT':([4,],[8,]),'OP_ADD':([15,],[24,]),'$end':([2,3,5,6,9,10,19,28,],[-5,0,-4,-1,-2,-3,-7,-6,]),'LBRACE':([0,2,5,6,9,10,19,28,],[1,-5,-4,1,-2,-3,-7,-6,]),'RBRACE':([11,12,13,14,16,18,30,40,41,45,50,51,52,53,54,55,56,],[-28,19,-9,-27,-26,-8,-11,-13,-21,-10,-25,-24,-22,-12,-20,-23,-19,]),'NUMBER':([7,11,12,13,14,16,18,22,23,24,26,27,29,30,35,36,37,38,40,41,42,43,45,49,50,51,52,53,54,55,56,],[14,-28,14,-9,-27,-26,-8,14,14,14,14,14,14,-11,-30,14,14,14,-13,-21,14,14,-10,-29,-25,-24,-22,-12,-20,-23,-19,]),'LPAREN':([0,2,5,6,7,9,10,11,12,13,14,16,18,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,45,46,49,50,51,52,53,54,55,56,58,],[4,-5,-4,4,15,-2,-3,-28,15,-9,-27,-26,-8,-7,32,15,15,15,32,15,15,-6,15,-11,32,-17,-15,-30,15,15,15,32,-13,-21,15,15,-10,-14,-29,-25,-24,-22,-12,-20,-23,-19,-16,]),'ID':([1,7,8,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,],[7,16,17,-28,16,-9,-27,26,-26,-8,29,33,16,16,16,33,16,16,16,-11,33,47,-17,-15,-30,16,16,16,33,-13,-21,16,16,-10,-14,-18,57,-29,-25,-24,-22,-12,-20,-23,-19,-16,]),'OP_SUB':([15,],[27,]),'OP_MUL':([15,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([7,12,22,23,24,26,27,29,36,37,38,42,43,],[13,18,35,35,35,35,35,44,49,49,49,49,49,]),'import_statement':([0,6,],[5,10,]),'component':([0,6,],[2,9,]),'program':([0,],[3,]),'declaration_list':([21,25,],[31,39,]),'parameter_list':([22,23,24,26,27,],[36,37,38,42,43,]),'expression_list':([7,],[12,]),'declaration':([21,25,31,39,],[34,34,46,46,]),'type':([32,],[48,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
