
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1FCB2EDDF1216D4CA039394CC93A7CE'
    
_lr_action_items = {'OUTPUT':([14,],[19,]),'INPUT':([14,],[20,]),'NUMBER':([10,12,13,15,16,17,22,23,24,25,26,28,31,35,36,37,38,39,40,41,42,43,45,48,50,51,52,53,54,55,57,],[13,-28,-27,-9,-26,13,13,13,13,13,13,-8,-13,-11,13,13,-30,13,13,-21,13,13,-12,-10,-25,-29,-24,-20,-23,-22,-19,]),'STRING':([10,12,13,15,16,17,22,23,24,25,26,28,31,35,36,37,38,39,40,41,42,43,45,48,50,51,52,53,54,55,57,],[12,-28,-27,-9,-26,12,12,12,12,12,12,-8,-13,-11,12,12,-30,12,12,-21,12,12,-12,-10,-25,-29,-24,-20,-23,-22,-19,]),'LBRACE':([0,2,3,5,7,8,18,27,],[6,6,-5,-4,-2,-3,-6,-7,]),'IMPORT':([4,],[9,]),'OP_ADD':([14,],[26,]),'RBRACE':([12,13,15,16,17,28,31,35,41,45,48,50,52,53,54,55,57,],[-28,-27,-9,-26,27,-8,-13,-11,-21,-12,-10,-25,-24,-20,-23,-22,-19,]),'RPAREN':([11,12,13,16,19,20,24,29,30,31,32,34,35,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,31,35,41,-15,45,-13,-17,48,-11,50,-30,52,53,-21,54,55,-14,-12,-10,57,-25,-29,-24,-20,-23,-22,58,-19,-16,]),'OP_DIV':([14,],[22,]),'$end':([1,2,3,5,7,8,18,27,],[0,-1,-5,-4,-2,-3,-6,-7,]),'ID':([6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,57,58,],[10,11,16,-28,-27,24,-9,-26,16,32,32,36,16,16,16,16,16,-8,-15,32,-13,-17,46,32,-11,16,16,-30,16,16,-21,16,16,-14,-12,-18,56,-10,-25,-29,-24,-20,-23,-22,-19,-16,]),'LPAREN':([0,2,3,5,7,8,10,12,13,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,52,53,54,55,57,58,],[4,4,-5,-4,-2,-3,14,-28,-27,-9,-26,14,-6,33,33,14,14,14,14,14,-7,-8,-15,33,-13,-17,33,-11,14,14,-30,14,14,-21,14,14,-14,-12,-10,-25,-29,-24,-20,-23,-22,-19,-16,]),'OP_SUB':([14,],[25,]),'OP_MUL':([14,],[23,]),'ASSIGN':([14,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([22,23,24,25,26,],[37,39,40,42,43,]),'declaration':([19,20,30,34,],[29,29,44,44,]),'program':([0,],[1,]),'declaration_list':([19,20,],[30,34,]),'statement_list':([0,],[2,]),'component':([0,2,],[3,7,]),'expression':([10,17,22,23,24,25,26,36,37,39,40,42,43,],[15,28,38,38,38,38,38,49,51,51,51,51,51,]),'import_statement':([0,2,],[5,8,]),'type':([33,],[47,]),'expression_list':([10,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
