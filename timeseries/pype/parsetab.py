
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'LBRACE':([0,3,4,6,9,10,26,28,],[1,-5,1,-4,-2,-3,-7,-6,]),'OUTPUT':([15,],[23,]),'$end':([3,4,5,6,9,10,26,28,],[-5,-1,0,-4,-2,-3,-7,-6,]),'RBRACE':([11,12,13,14,16,27,31,35,40,45,46,47,50,53,54,55,57,],[-27,-26,-9,-28,26,-8,-21,-11,-13,-20,-25,-22,-10,-12,-23,-24,-19,]),'IMPORT':([2,],[8,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[7,12,17,-27,-26,-9,-28,18,12,12,12,12,38,39,38,12,12,-8,12,-30,-21,12,12,49,-11,38,-15,-17,12,-13,38,12,12,-29,-20,-25,-22,56,-18,-10,-14,-12,-23,-24,-19,-16,]),'OP_DIV':([15,],[19,]),'OP_ADD':([15,],[20,]),'INPUT':([15,],[21,]),'OP_SUB':([15,],[24,]),'LPAREN':([0,3,4,6,7,9,10,11,12,13,14,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,53,54,55,57,58,],[2,-5,2,-4,15,-2,-3,-27,-26,-9,-28,15,15,15,15,34,34,15,15,-7,-8,-6,15,-30,-21,15,15,-11,34,-15,-17,15,-13,34,15,15,-29,-20,-25,-22,-10,-14,-12,-23,-24,-19,-16,]),'RPAREN':([11,12,14,17,18,21,23,29,30,31,32,33,35,36,37,38,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[-27,-26,-28,28,31,35,40,45,-30,-21,46,47,-11,50,-15,-17,-13,53,54,55,-29,-20,-25,-22,-10,-14,57,-12,-23,-24,58,-19,-16,]),'ASSIGN':([15,],[22,]),'OP_MUL':([15,],[25,]),'STRING':([7,11,12,13,14,16,18,19,20,24,25,27,29,30,31,32,33,35,39,40,42,43,44,45,46,47,50,53,54,55,57,],[14,-27,-26,-9,-28,14,14,14,14,14,14,-8,14,-30,-21,14,14,-11,14,-13,14,14,-29,-20,-25,-22,-10,-12,-23,-24,-19,]),'NUMBER':([7,11,12,13,14,16,18,19,20,24,25,27,29,30,31,32,33,35,39,40,42,43,44,45,46,47,50,53,54,55,57,],[11,-27,-26,-9,-28,11,11,11,11,11,11,-8,11,-30,-21,11,11,-11,11,-13,11,11,-29,-20,-25,-22,-10,-12,-23,-24,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([7,16,18,19,20,24,25,29,32,33,39,42,43,],[13,27,30,30,30,30,30,44,44,44,52,44,44,]),'declaration':([21,23,36,41,],[37,37,51,51,]),'type':([34,],[48,]),'parameter_list':([18,19,20,24,25,],[29,32,33,42,43,]),'component':([0,4,],[3,9,]),'declaration_list':([21,23,],[36,41,]),'statement_list':([0,],[4,]),'program':([0,],[5,]),'import_statement':([0,4,],[6,10,]),'expression_list':([7,],[16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
