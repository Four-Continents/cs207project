
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '371EF72B57DF7D01BB0A145AD73D5ADC'
    
_lr_action_items = {'NUMBER':([8,12,13,14,16,17,19,20,22,23,26,27,29,30,31,35,37,38,40,41,42,43,44,45,46,50,51,52,53,55,57,],[16,-9,-28,-26,-27,16,16,16,16,16,16,-8,-30,16,16,-13,16,16,-11,16,-21,16,-29,-24,-25,-12,-22,-23,-10,-20,-19,]),'$end':([2,4,5,6,9,10,18,28,],[0,-5,-4,-1,-2,-3,-6,-7,]),'OP_DIV':([15,],[20,]),'RBRACE':([12,13,14,16,17,27,35,40,42,45,46,50,51,52,53,55,57,],[-9,-28,-26,-27,28,-8,-13,-11,-21,-24,-25,-12,-22,-23,-10,-20,-19,]),'OP_MUL':([15,],[19,]),'STRING':([8,12,13,14,16,17,19,20,22,23,26,27,29,30,31,35,37,38,40,41,42,43,44,45,46,50,51,52,53,55,57,],[13,-9,-28,-26,-27,13,13,13,13,13,13,-8,-30,13,13,-13,13,13,-11,13,-21,13,-29,-24,-25,-12,-22,-23,-10,-20,-19,]),'RPAREN':([11,13,14,16,21,24,26,29,30,31,33,34,35,36,37,38,39,40,42,43,44,45,46,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,35,40,42,-30,45,46,50,-15,-13,-17,51,52,53,-11,-21,55,-29,-24,-25,-14,-12,-22,-23,-10,57,-20,58,-19,-16,]),'ID':([3,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[8,11,14,-9,-28,-26,26,-27,14,14,14,36,14,14,36,41,14,-8,-30,14,14,48,36,-15,-13,-17,14,14,36,-11,14,-21,14,-29,-24,-25,56,-18,-14,-12,-22,-23,-10,-20,-19,-16,]),'LPAREN':([0,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,53,55,57,58,],[1,-5,-4,1,15,-2,-3,-9,-28,-26,-27,15,-6,15,15,32,15,15,32,15,-8,-7,-30,15,15,32,-15,-13,-17,15,15,32,-11,15,-21,15,-29,-24,-25,-14,-12,-22,-23,-10,-20,-19,-16,]),'OUTPUT':([15,],[21,]),'OP_ADD':([15,],[22,]),'OP_SUB':([15,],[23,]),'IMPORT':([1,],[7,]),'INPUT':([15,],[24,]),'ASSIGN':([15,],[25,]),'LBRACE':([0,4,5,6,9,10,18,28,],[3,-5,-4,3,-2,-3,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([8,17,19,20,22,23,26,30,31,37,38,41,43,],[12,27,29,29,29,29,29,44,44,44,44,54,44,]),'declaration_list':([21,24,],[33,39,]),'type':([32,],[47,]),'program':([0,],[2,]),'expression_list':([8,],[17,]),'parameter_list':([19,20,22,23,26,],[30,31,37,38,43,]),'component':([0,6,],[4,9,]),'declaration':([21,24,33,39,],[34,34,49,49,]),'import_statement':([0,6,],[5,10,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
