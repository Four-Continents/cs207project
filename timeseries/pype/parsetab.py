
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '371EF72B57DF7D01BB0A145AD73D5ADC'
    
_lr_action_items = {'ID':([1,7,8,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,57,58,],[7,11,17,-26,11,20,-9,-27,-28,-8,11,11,33,11,11,40,33,11,11,-21,-30,11,-17,33,-11,49,-15,11,11,11,33,-13,11,-20,-29,-22,-10,-14,-18,56,-24,-25,-12,-23,-19,-16,]),'OP_DIV':([13,],[24,]),'OP_ADD':([13,],[21,]),'RPAREN':([11,15,16,17,20,22,26,29,30,31,32,33,34,35,37,38,39,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,30,35,42,44,-21,-30,46,-17,47,-11,-15,51,52,54,-13,55,-20,-29,-22,-10,-14,-24,-25,57,-12,-23,58,-19,-16,]),'$end':([2,4,5,6,9,10,19,28,],[-4,0,-1,-5,-3,-2,-7,-6,]),'INPUT':([13,],[22,]),'NUMBER':([7,11,12,14,15,16,18,20,21,23,24,27,29,30,31,32,35,38,39,40,42,43,44,45,46,47,51,52,54,55,57,],[15,-26,15,-9,-27,-28,-8,15,15,15,15,15,15,-21,-30,15,-11,15,15,15,-13,15,-20,-29,-22,-10,-24,-25,-12,-23,-19,]),'LBRACE':([0,2,5,6,9,10,19,28,],[1,-4,1,-5,-3,-2,-7,-6,]),'OP_SUB':([13,],[27,]),'STRING':([7,11,12,14,15,16,18,20,21,23,24,27,29,30,31,32,35,38,39,40,42,43,44,45,46,47,51,52,54,55,57,],[16,-26,16,-9,-27,-28,-8,16,16,16,16,16,16,-21,-30,16,-11,16,16,16,-13,16,-20,-29,-22,-10,-24,-25,-12,-23,-19,]),'LPAREN':([0,2,5,6,7,9,10,11,12,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,51,52,54,55,57,58,],[3,-4,3,-5,13,-3,-2,-26,13,-9,-27,-28,-8,-7,13,13,36,13,13,36,13,-6,13,-21,-30,13,-17,36,-11,-15,13,13,13,36,-13,13,-20,-29,-22,-10,-14,-24,-25,-12,-23,-19,-16,]),'ASSIGN':([13,],[25,]),'OUTPUT':([13,],[26,]),'OP_MUL':([13,],[23,]),'RBRACE':([11,12,14,15,16,18,30,35,42,44,46,47,51,52,54,55,57,],[-26,19,-9,-27,-28,-8,-21,-11,-13,-20,-22,-10,-24,-25,-12,-23,-19,]),'IMPORT':([3,],[8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([22,26,34,41,],[37,37,48,48,]),'expression_list':([7,],[12,]),'type':([36,],[50,]),'import_statement':([0,5,],[2,9,]),'declaration_list':([22,26,],[34,41,]),'program':([0,],[4,]),'statement_list':([0,],[5,]),'parameter_list':([20,21,23,24,27,],[29,32,38,39,43,]),'expression':([7,12,20,21,23,24,27,29,32,38,39,40,43,],[14,18,31,31,31,31,31,45,45,45,45,53,45,]),'component':([0,5,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
