
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D1BCF469A7160DABB9E0C3456A50E8'
    
_lr_action_items = {'IMPORT':([4,],[9,]),'INPUT':([13,],[19,]),'OP_ADD':([13,],[20,]),'$end':([1,2,3,6,7,8,18,28,],[0,-1,-5,-4,-2,-3,-6,-7,]),'LPAREN':([0,2,3,6,7,8,10,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,55,57,58,],[4,4,-5,-4,-2,-3,13,-9,-27,13,-26,-28,-6,32,13,13,13,32,13,13,-8,-7,-15,32,-11,-17,-30,13,13,13,32,-13,-21,13,13,13,-14,-10,-29,-22,-24,-23,-12,-20,-25,-19,-16,]),'OP_DIV':([13,],[26,]),'LBRACE':([0,2,3,6,7,8,18,28,],[5,5,-5,-4,-2,-3,-6,-7,]),'OUTPUT':([13,],[23,]),'STRING':([10,12,14,15,16,17,20,21,22,24,26,27,31,34,35,36,37,39,40,41,42,43,45,48,49,50,51,52,53,55,57,],[17,-9,-27,17,-26,-28,17,17,17,17,17,-8,-11,-30,17,17,17,-13,-21,17,17,17,-10,-29,-22,-24,-23,-12,-20,-25,-19,]),'ID':([5,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,],[10,11,16,-9,24,-27,16,-26,-28,33,16,16,16,33,16,42,16,-8,-15,33,-11,46,-17,-30,16,16,16,33,-13,-21,16,16,16,-14,-10,-18,56,-29,-22,-24,-23,-12,-20,-25,-19,-16,]),'ASSIGN':([13,],[25,]),'RPAREN':([11,14,16,17,19,23,24,29,30,31,33,34,35,36,37,38,39,40,41,43,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-27,-26,-28,31,39,40,-15,45,-11,-17,-30,49,50,51,52,-13,-21,53,55,-14,-10,-29,-22,-24,-23,-12,-20,57,-25,58,-19,-16,]),'NUMBER':([10,12,14,15,16,17,20,21,22,24,26,27,31,34,35,36,37,39,40,41,42,43,45,48,49,50,51,52,53,55,57,],[14,-9,-27,14,-26,-28,14,14,14,14,14,-8,-11,-30,14,14,14,-13,-21,14,14,14,-10,-29,-22,-24,-23,-12,-20,-25,-19,]),'RBRACE':([12,14,15,16,17,27,31,39,40,45,49,50,51,52,53,55,57,],[-9,-27,28,-26,-28,-8,-11,-13,-21,-10,-22,-24,-23,-12,-20,-25,-19,]),'OP_SUB':([13,],[22,]),'OP_MUL':([13,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([10,15,20,21,22,24,26,35,36,37,41,42,43,],[12,27,34,34,34,34,34,48,48,48,48,54,48,]),'program':([0,],[1,]),'declaration':([19,23,30,38,],[29,29,44,44,]),'statement_list':([0,],[2,]),'component':([0,2,],[3,7,]),'expression_list':([10,],[15,]),'declaration_list':([19,23,],[30,38,]),'parameter_list':([20,21,22,24,26,],[35,36,37,41,43,]),'import_statement':([0,2,],[6,8,]),'type':([32,],[47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
