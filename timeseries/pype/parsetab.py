
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'RPAREN':([11,13,15,17,24,26,27,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,],[-27,-28,-26,28,34,40,42,-30,44,46,47,-11,-15,49,-17,53,-21,54,-13,55,-25,-29,-24,-23,56,-10,-14,-22,-20,-12,-19,58,-16,]),'IMPORT':([6,],[10,]),'INPUT':([16,],[24,]),'OP_DIV':([16,],[20,]),'STRING':([7,11,12,13,14,15,18,20,21,22,25,26,29,30,31,32,33,34,39,40,41,42,44,45,46,47,49,53,54,55,56,],[13,-27,13,-28,-9,-26,-8,13,13,13,13,13,-30,13,13,13,13,-11,13,-21,13,-13,-25,-29,-24,-23,-10,-22,-20,-12,-19,]),'RBRACE':([11,12,13,14,15,18,34,40,42,44,46,47,49,53,54,55,56,],[-27,19,-28,-9,-26,-8,-11,-21,-13,-25,-24,-23,-10,-22,-20,-12,-19,]),'$end':([2,3,4,5,8,9,19,28,],[-5,-1,-4,0,-2,-3,-7,-6,]),'NUMBER':([7,11,12,13,14,15,18,20,21,22,25,26,29,30,31,32,33,34,39,40,41,42,44,45,46,47,49,53,54,55,56,],[11,-27,11,-28,-9,-26,-8,11,11,11,11,11,-30,11,11,11,11,-11,11,-21,11,-13,-25,-29,-24,-23,-10,-22,-20,-12,-19,]),'ASSIGN':([16,],[23,]),'OP_MUL':([16,],[21,]),'OUTPUT':([16,],[27,]),'OP_ADD':([16,],[25,]),'ID':([1,7,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,],[7,15,17,-27,15,-28,-9,-26,26,-8,15,15,15,33,37,15,15,37,-30,15,15,15,15,-11,-15,37,-17,51,15,-21,15,-13,37,-25,-29,-24,-23,-10,-14,-18,57,-22,-20,-12,-19,-16,]),'LPAREN':([0,2,3,4,7,8,9,11,12,13,14,15,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,50,53,54,55,56,58,],[6,-5,6,-4,16,-2,-3,-27,16,-28,-9,-26,-8,-7,16,16,16,38,16,16,38,-6,-30,16,16,16,16,-11,-15,38,-17,16,-21,16,-13,38,-25,-29,-24,-23,-10,-14,-22,-20,-12,-19,-16,]),'OP_SUB':([16,],[22,]),'LBRACE':([0,2,3,4,8,9,19,28,],[1,-5,1,-4,-2,-3,-7,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([24,27,],[36,43,]),'expression':([7,12,20,21,22,25,26,30,31,32,33,39,41,],[14,18,29,29,29,29,29,45,45,45,48,45,45,]),'component':([0,3,],[2,8,]),'statement_list':([0,],[3,]),'import_statement':([0,3,],[4,9,]),'declaration':([24,27,36,43,],[35,35,50,50,]),'parameter_list':([20,21,22,25,26,],[30,31,32,39,41,]),'program':([0,],[5,]),'type':([38,],[52,]),'expression_list':([7,],[12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
