
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BA90F0C8CB04659A4089667E76C36B34'
    
_lr_action_items = {'OP_DIV':([16,],[21,]),'OP_SUB':([16,],[27,]),'RBRACE':([12,13,14,15,17,20,35,38,43,44,47,50,51,53,54,55,57,],[-28,-9,19,-27,-26,-8,-11,-13,-21,-25,-10,-24,-12,-22,-23,-20,-19,]),'INPUT':([16,],[22,]),'IMPORT':([2,],[7,]),'RPAREN':([11,12,15,17,22,24,28,29,30,31,32,33,35,36,37,38,40,41,42,43,44,45,46,47,50,51,52,53,54,55,56,57,58,],[18,-28,-27,-26,35,38,43,44,-30,-15,47,-17,-11,50,51,-13,53,54,55,-21,-25,-29,-14,-10,-24,-12,57,-22,-23,-20,58,-19,-16,]),'$end':([1,3,4,6,8,9,18,19,],[-4,0,-1,-5,-3,-2,-6,-7,]),'OP_MUL':([16,],[23,]),'STRING':([10,12,13,14,15,17,20,21,23,26,27,28,29,30,35,36,38,39,40,41,42,43,44,45,47,50,51,53,54,55,57,],[12,-28,-9,12,-27,-26,-8,12,12,12,12,12,12,-30,-11,12,-13,12,12,12,12,-21,-25,-29,-10,-24,-12,-22,-23,-20,-19,]),'OUTPUT':([16,],[24,]),'ASSIGN':([16,],[25,]),'LBRACE':([0,1,4,6,8,9,18,19,],[5,-4,5,-5,-3,-2,-6,-7,]),'NUMBER':([10,12,13,14,15,17,20,21,23,26,27,28,29,30,35,36,38,39,40,41,42,43,44,45,47,50,51,53,54,55,57,],[15,-28,-9,15,-27,-26,-8,15,15,15,15,15,15,-30,-11,15,-13,15,15,15,15,-21,-25,-29,-10,-24,-12,-22,-23,-20,-19,]),'OP_ADD':([16,],[26,]),'LPAREN':([0,1,4,6,8,9,10,12,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,53,54,55,57,58,],[2,-4,2,-5,-3,-2,16,-28,-9,16,-27,-26,-6,-7,-8,16,34,16,34,16,16,16,16,-30,-15,34,-17,-11,16,34,-13,16,16,16,16,-21,-25,-29,-14,-10,-24,-12,-22,-23,-20,-19,-16,]),'ID':([5,7,10,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,58,],[10,11,17,-28,-9,17,-27,28,-26,-8,17,33,17,33,39,17,17,17,17,-30,-15,33,-17,49,-11,17,33,-13,17,17,17,17,-21,-25,-29,-14,-10,56,-18,-24,-12,-22,-23,-20,-19,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([10,],[14,]),'type':([34,],[48,]),'import_statement':([0,4,],[1,8,]),'program':([0,],[3,]),'statement_list':([0,],[4,]),'declaration':([22,24,32,37,],[31,31,46,46,]),'declaration_list':([22,24,],[32,37,]),'component':([0,4,],[6,9,]),'expression':([10,14,21,23,26,27,28,29,36,39,40,41,42,],[13,20,30,30,30,30,30,45,45,52,45,45,45,]),'parameter_list':([21,23,26,27,28,],[29,36,40,41,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
