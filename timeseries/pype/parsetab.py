
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B7DA2FE6C22431AB95D14A63E4FE0078'
    
_lr_action_items = {'LBRACE':([0,3,5,6,9,10,18,27,],[2,-5,2,-4,-2,-3,-6,-7,]),'OP_MUL':([12,],[19,]),'INPUT':([12,],[20,]),'LPAREN':([0,3,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,57,58,],[1,-5,1,-4,12,-2,-3,12,-9,-28,-26,-27,-6,12,32,12,12,32,12,12,-7,-8,-30,12,-15,-11,-17,32,12,12,-13,32,-21,12,12,12,-24,-29,-14,-10,-22,-23,-12,-20,-25,-19,-16,]),'RPAREN':([11,15,16,17,20,23,24,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,48,49,50,51,52,53,54,55,56,57,58,],[18,-28,-26,-27,33,38,40,-30,44,-15,-11,-17,49,50,51,-13,52,-21,53,54,-24,-29,-14,-10,-22,-23,-12,-20,-25,57,58,-19,-16,]),'RBRACE':([13,14,15,16,17,28,33,38,40,44,49,50,51,52,53,54,57,],[27,-9,-28,-26,-27,-8,-11,-13,-21,-24,-10,-22,-23,-12,-20,-25,-19,]),'OP_SUB':([12,],[22,]),'OP_ADD':([12,],[21,]),'IMPORT':([1,],[7,]),'OUTPUT':([12,],[23,]),'$end':([3,4,5,6,9,10,18,27,],[-5,0,-1,-4,-2,-3,-6,-7,]),'OP_DIV':([12,],[25,]),'ID':([2,7,8,12,13,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[8,11,16,24,16,-9,-28,-26,-27,16,34,16,16,34,16,16,43,-8,-30,16,-15,46,-11,-17,34,16,16,-13,34,-21,16,16,16,-24,-29,-18,56,-14,-10,-22,-23,-12,-20,-25,-19,-16,]),'ASSIGN':([12,],[26,]),'STRING':([8,13,14,15,16,17,19,21,22,24,25,28,29,30,33,36,37,38,40,41,42,43,44,45,49,50,51,52,53,54,57,],[15,15,-9,-28,-26,-27,15,15,15,15,15,-8,-30,15,-11,15,15,-13,-21,15,15,15,-24,-29,-10,-22,-23,-12,-20,-25,-19,]),'NUMBER':([8,13,14,15,16,17,19,21,22,24,25,28,29,30,33,36,37,38,40,41,42,43,44,45,49,50,51,52,53,54,57,],[17,17,-9,-28,-26,-27,17,17,17,17,17,-8,-30,17,-11,17,17,-13,-21,17,17,17,-24,-29,-10,-22,-23,-12,-20,-25,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([19,21,22,24,25,],[30,36,37,41,42,]),'type':([32,],[47,]),'declaration':([20,23,35,39,],[31,31,48,48,]),'expression':([8,13,19,21,22,24,25,30,36,37,41,42,43,],[14,28,29,29,29,29,29,45,45,45,45,45,55,]),'expression_list':([8,],[13,]),'component':([0,5,],[3,9,]),'declaration_list':([20,23,],[35,39,]),'program':([0,],[4,]),'statement_list':([0,],[5,]),'import_statement':([0,5,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',74),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',75),
  ('type -> ID','type',1,'p_type','parser.py',83),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',88),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',95),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_op_add_expression','parser.py',103),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_op_sub_expression','parser.py',108),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_op_mul_expression','parser.py',113),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_op_div_expression','parser.py',118),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',128),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',133),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',138),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',139),
]
