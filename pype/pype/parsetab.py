
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '55C53B9434ED5FC68BBE31AE8D09ED67'
    
_lr_action_items = {'OP_MUL':([12,],[18,]),'OP_ADD':([12,],[19,]),'INPUT':([12,],[23,]),'RPAREN':([13,15,16,17,21,23,25,29,30,31,32,33,34,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,],[-26,-27,-28,28,33,36,42,45,-30,46,47,-21,48,-11,50,-15,-17,54,-13,55,-29,-24,-22,-25,-20,56,-10,-14,-23,-12,-19,58,-16,]),'OP_DIV':([12,],[20,]),'LPAREN':([0,1,2,3,7,8,9,11,13,14,15,16,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,50,51,54,55,56,58,],[6,-5,-4,6,-2,-3,12,-9,-26,12,-27,-28,12,12,12,12,39,12,39,-8,-7,-6,12,-30,12,12,-21,12,12,-11,39,-15,-17,12,-13,39,-29,-24,-22,-25,-20,-10,-14,-23,-12,-19,-16,]),'ID':([5,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,58,],[9,13,17,-9,21,-26,13,-27,-28,13,13,13,13,35,40,13,40,-8,13,-30,13,13,-21,13,13,-11,40,-15,53,-17,13,-13,40,-29,-24,-22,-25,-20,-10,-14,57,-18,-23,-12,-19,-16,]),'RBRACE':([11,13,14,15,16,26,33,36,42,45,46,47,48,50,54,55,56,],[-9,-26,27,-27,-28,-8,-21,-11,-13,-24,-22,-25,-20,-10,-23,-12,-19,]),'$end':([1,2,3,4,7,8,27,28,],[-5,-4,-1,0,-2,-3,-7,-6,]),'IMPORT':([6,],[10,]),'ASSIGN':([12,],[22,]),'LBRACE':([0,1,2,3,7,8,27,28,],[5,-5,-4,5,-2,-3,-7,-6,]),'OP_SUB':([12,],[24,]),'OUTPUT':([12,],[25,]),'NUMBER':([9,11,13,14,15,16,18,19,20,21,24,26,29,30,31,32,33,34,35,36,41,42,44,45,46,47,48,50,54,55,56,],[15,-9,-26,15,-27,-28,15,15,15,15,15,-8,15,-30,15,15,-21,15,15,-11,15,-13,-29,-24,-22,-25,-20,-10,-23,-12,-19,]),'STRING':([9,11,13,14,15,16,18,19,20,21,24,26,29,30,31,32,33,34,35,36,41,42,44,45,46,47,48,50,54,55,56,],[16,-9,-26,16,-27,-28,16,16,16,16,16,-8,16,-30,16,16,-21,16,16,-11,16,-13,-29,-24,-22,-25,-20,-10,-23,-12,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'component':([0,3,],[1,7,]),'import_statement':([0,3,],[2,8,]),'expression':([9,14,18,19,20,21,24,29,31,32,34,35,41,],[11,26,30,30,30,30,30,44,44,44,44,49,44,]),'statement_list':([0,],[3,]),'program':([0,],[4,]),'declaration_list':([23,25,],[37,43,]),'expression_list':([9,],[14,]),'type':([39,],[52,]),'declaration':([23,25,37,43,],[38,38,51,51,]),'parameter_list':([18,19,20,21,24,],[29,31,32,34,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',15),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',16),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',17),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',26),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',31),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',36),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',37),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_expression_input','parser.py',46),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_expression_input','parser.py',47),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_expression_output','parser.py',55),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_expression_output','parser.py',56),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',64),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',65),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',73),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',74),
  ('type -> ID','type',1,'p_type','parser.py',82),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_expression_assign','parser.py',87),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_expression_eval','parser.py',93),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_expression_eval','parser.py',94),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_expression_add','parser.py',102),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_expression_subtract','parser.py',107),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_expression_mult','parser.py',112),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_expression_div','parser.py',117),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',122),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',127),
  ('expression -> STRING','expression',1,'p_expression_str','parser.py',132),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_params_list','parser.py',137),
  ('parameter_list -> expression','parameter_list',1,'p_params_list','parser.py',138),
]
